{
  service: 'user-service',
  statusCode: 409,
  level: 'error',
  message: '---GlobalErrorHandler--- Already Exist ...',
  stack: 'Error: Already Exist ...\n' +
    '    at model.<anonymous> (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.model.ts:52:11)\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.model.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'UM',
  timestamp: '2023-08-03T12:27:36.873Z'
}
{
  service: 'user-service',
  ok: 0,
  code: 51024,
  codeName: 'Location51024',
  '$clusterTime': {
    clusterTime: new Timestamp({ t: 1691065947, i: 13 }),
    signature: {
      hash: Binary.createFromBase64("DTYWubTb9ngXawjCycjhMSjgoMo=", 0),
      keyId: new Long("7229333744841129986")
    }
  },
  operationTime: new Timestamp({ t: 1691065947, i: 13 }),
  level: 'error',
  message: "---GlobalErrorHandler--- BSON field 'skip' value must be >= 0, actual value '-2'",
  stack: "MongoServerError: BSON field 'skip' value must be >= 0, actual value '-2'\n" +
    '    at Connection.onMessage (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongodb\\src\\cmap\\connection.ts:413:18)\n' +
    '    at MessageStream.<anonymous> (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)\n' +
    '    at _write (node:internal/streams/writable:333:10)\n' +
    '    at MessageStream.Writable.write (node:internal/streams/writable:337:10)\n' +
    '    at TLSSocket.ondata (node:internal/streams/readable:766:22)\n' +
    '    at TLSSocket.emit (node:events:513:28)',
  label: 'UM',
  timestamp: '2023-08-03T12:32:27.008Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  service: 'user-service',
  issues: [
    {
      received: 'll',
      code: 'invalid_enum_value',
      options: [ 'Autumn', 'Summer', 'Fall' ],
      path: [ 'body', 'title' ],
      message: "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'll'"
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: '---GlobalErrorHandler--- [\n' +
    '  {\n' +
    '    "received": "ll",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'll'"\n` +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "received": "ll",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'll'"\n` +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'UM',
  timestamp: '2023-08-03T12:48:27.527Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: '---GlobalErrorHandler--- Invalid Semenster Code...',
  stack: 'Error: Invalid Semenster Code...\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:15:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:4:12)\n' +
    '    at Object.createSemester (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:13:33)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:13:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'UM',
  timestamp: '2023-08-03T12:48:36.904Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: '---GlobalErrorHandler--- Invalid Semenster Code...',
  stack: 'Error: Invalid Semenster Code...\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:15:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:4:12)\n' +
    '    at Object.createSemester (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:13:33)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:13:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'UM',
  timestamp: '2023-08-03T12:48:47.902Z'
}
{
  service: 'user-service',
  issues: [
    {
      received: 'fall',
      code: 'invalid_enum_value',
      options: [ 'Autumn', 'Summer', 'Fall' ],
      path: [ 'body', 'title' ],
      message: "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'fall'"
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: '---GlobalErrorHandler--- [\n' +
    '  {\n' +
    '    "received": "fall",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'fall'"\n` +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "received": "fall",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'fall'"\n` +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'UM',
  timestamp: '2023-08-03T12:49:09.157Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: '---GlobalErrorHandler--- Invalid Semenster Code...',
  stack: 'Error: Invalid Semenster Code...\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:15:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:4:12)\n' +
    '    at Object.createSemester (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:13:33)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:13:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'UM',
  timestamp: '2023-08-03T12:49:18.387Z'
}
{
  service: 'user-service',
  issues: [
    {
      received: 'Autom',
      code: 'invalid_enum_value',
      options: [ 'Autumn', 'Summer', 'Fall' ],
      path: [ 'body', 'title' ],
      message: "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'Autom'"
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: '---GlobalErrorHandler--- [\n' +
    '  {\n' +
    '    "received": "Autom",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'Autom'"\n` +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "received": "Autom",\n' +
    '    "code": "invalid_enum_value",\n' +
    '    "options": [\n' +
    '      "Autumn",\n' +
    '      "Summer",\n' +
    '      "Fall"\n' +
    '    ],\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    `    "message": "Invalid enum value. Expected 'Autumn' | 'Summer' | 'Fall', received 'Autom'"\n` +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'UM',
  timestamp: '2023-08-03T12:49:26.192Z'
}
{
  service: 'user-service',
  level: 'error',
  message: '---GlobalErrorHandler--- Invalid sort value: { code: ace }',
  stack: 'TypeError: Invalid sort value: { code: ace }\n' +
    '    at push (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mquery\\lib\\mquery.js:1315:19)\n' +
    '    at model.Query.Query.sort (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mquery\\lib\\mquery.js:1272:7)\n' +
    '    at model.Query.Query.sort (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongoose\\lib\\query.js:2941:26)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:34:6\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:4:12)\n' +
    '    at Object.getAllsemesters (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:23:63)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:41:50',
  label: 'UM',
  timestamp: '2023-08-03T12:51:56.917Z'
}
{
  service: 'user-service',
  level: 'error',
  message: '---GlobalErrorHandler--- Invalid sort value: { code: asce }',
  stack: 'TypeError: Invalid sort value: { code: asce }\n' +
    '    at push (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mquery\\lib\\mquery.js:1315:19)\n' +
    '    at model.Query.Query.sort (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mquery\\lib\\mquery.js:1272:7)\n' +
    '    at model.Query.Query.sort (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\node_modules\\mongoose\\lib\\query.js:2941:26)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:34:6\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:4:12)\n' +
    '    at Object.getAllsemesters (C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.service.ts:23:63)\n' +
    '    at C:\\Users\\satay\\Desktop\\level 2\\University-Management-System\\src\\app\\modules\\academicSemester\\academicSemester.controller.ts:41:50',
  label: 'UM',
  timestamp: '2023-08-03T12:52:09.701Z'
}
